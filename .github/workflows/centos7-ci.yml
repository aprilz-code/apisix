name: CI  Centos7

on:
  push:
    branches: [master, 'release/**']
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  pull_request:
    branches: [master, 'release/**']
    paths-ignore:
      - 'docs/**'
      - '**/*.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test_apisix:
    name: run ci on centos7
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    strategy:
      fail-fast: false

    steps:
      - name: Check out code
        uses: actions/checkout@v3.2.0
        with:
          submodules: recursive

      - name: Cache deps
        uses: actions/cache@v3
        env:
          cache-name: cache-deps
        with:
          path: deps
          key: ${{ runner.os }}-${{ env.cache-name }}-centos7-${{ hashFiles('rockspec/apisix-master-0.rockspec') }}

      - name: Extract branch name
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        id: branch_env
        shell: bash
        run: |
          echo "version=${GITHUB_REF##*/}" >>$GITHUB_OUTPUT

      - name: Linux launch common services
        run: |
          make ci-env-up project_compose_ci=ci/pod/docker-compose.common.yml
          sudo ./ci/init-common-test-service.sh

      - name: Build rpm package
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        run: |
          export VERSION=${{ steps.branch_env.outputs.version }}
          sudo gem install --no-document fpm
          git clone --depth 1 https://github.com/api7/apisix-build-tools.git

          # move codes under build tool
          mkdir ./apisix-build-tools/apisix
          for dir in `ls|grep -v "^apisix-build-tools$"`;do cp -r $dir ./apisix-build-tools/apisix/;done

          cd apisix-build-tools
          make package type=rpm app=apisix version=${VERSION} checkout=release/${VERSION} image_base=centos image_tag=7 local_code_path=./apisix
          cd ..
          rm -rf $(ls -1 --ignore=apisix-build-tools --ignore=t --ignore=utils --ignore=ci --ignore=Makefile --ignore=rockspec)

      - name: Build xDS library
        if: steps.test_env.outputs.type == 'last'
        run: |
          cd t/xds-library
          go build -o libxds.so -buildmode=c-shared main.go export.go

      - name: Run centos7 docker and mapping apisix into container
        run: |
          docker run -itd -v /home/runner/work/apisix/apisix:/apisix --name centos7Instance --net="host" --dns 8.8.8.8 --dns-search apache.org docker.io/centos:7 /bin/bash

      - name: Install dependencies
        run: |
          docker exec centos7Instance bash -c "cd apisix && ./ci/centos7-ci.sh install_dependencies"

      - name: Install rpm package
        if: ${{ startsWith(github.ref, 'refs/heads/release/') }}
        run: |
          docker exec centos7Instance bash -c "cd apisix && rpm -iv --prefix=/apisix ./apisix-build-tools/output/apisix-${{ steps.branch_env.outputs.version }}-0.el7.x86_64.rpm"
          # Dependencies are attached with rpm, so revert `make deps`
          docker exec centos7Instance bash -c "cd apisix && rm -rf deps"
          docker exec centos7Instance bash -c "cd apisix && mv usr/bin . && mv usr/local/apisix/* ."

      - name: Run test cases
        run: |
          docker exec centos7Instance bash -c "cd apisix && ./ci/centos7-ci.sh run_case"
          docker commit  centos7Instance registry.cn-shenzhen.aliyuncs.com/whiteblog/apisix:lastest

      # 登录到 阿里云镜像服务，使用 GitHub secrets 传入账号密码，密码被加密存储在 GitHub 服务器
      - name: Login to Aliyun
        uses: docker/login-action@v1
        with:
          registry: registry.cn-shenzhen.aliyuncs.com
          username: ${{ secrets.ALIYUN_USER_NAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Push Docker Image
        run: |
          echo '=====开始上传镜像====='
          echo '=====开始上传apisix====='
          docker push registry.cn-shenzhen.aliyuncs.com/whiteblog/apisix:lastest
          echo '=====镜像上传结束====='
